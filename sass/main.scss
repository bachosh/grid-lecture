.container {
    background-color: #eee;
    width: 1000px;
    margin: 30px auto;
  
    display: grid;
    /* grid-template-rows: 150px 150px;  იგივეა */
      /* grid-template-rows: [sakheli-start] 150px [sakheli-end-2 sakheli-start-3]  150px [sakhel-end] 100px;  სახელის დარქმევა row სთვის 
      შემდგომში ნომრების მაგივრად ამ სახელების გამოყენება შეგვიძლია. ერთ როუს ორი სახელიც ერქმევა*/
    grid-template-rows: repeat(2, 150px);
   
    
    /* grid-template-columns: 150px 150px 150px;
    grid-template-columns: repeat(2, 150px) 170px;
    grid-template-columns: repeat(2, 150px) 1fr; //  fr ფრაქციონ იუნით  მთლიანად ავსებს დარჩენილ ადგილს
    grid-template-columns: 1fr 2fr 1fr;  //შუა ორჯედ დიდი იქნება ვიდრე
    grid-template-columns: 50% 2fr 1fr;   */
    grid-template-columns: repeat(3, 1fr);
    /* grid-template-columns: repeat(3,[start-name] 1fr [end-name]) 202px; აქ გადანომრავს და ავტომატურად მიაწერს ნომერის გამოვიყენებთ ასე start-name 1 start-name 2 .. */
    
    /* grid-row-gap: 30px;
    grid-column-gap: 40px;   */
     grid-gap: 30px;
  }
  
  .item {
    padding: 20px;
    font-size: 30px;
    font-family: sans-serif;
    color: white;
    
    &--1 {
      /* background-color: orange;
      grid-row-start: 2;
      grid-row-end: 3;  
      grid-column-start: 2;
      grid-column-end: 3;  
      grid-row: 2/3;
      grid-column: 1/2;  კორდინატებზე ითემის გადატანა. ზედა გრელი ვერსიაა; */
       grid-area: 2 / 1 / 3 / 2 /* ზედას შემოკლებული ვერსია */
    }
    
    &--2 {
      background-color: green;
      grid-row: 1/ span 2;  // span უჯრების რაოდენობს მიუთიტებ როლელზეც უნდა გაიშალოს
                            // span 2 მაგივრად -1 ნიშნავს რომ ბოლო ველამდე გაიზარდოს
      grid-column: 1/2;    
    }
      
    &--3 {
      background-color: violet;
      grid-row: 2/3;
      grid-column: 2/4;    
    }
      
    &--4 {
      background-color: pink;
    }
      
    &--5 {
      background-color: blue;
      grid-row: 1/2;
      grid-column: 3/4;
      
    }
      
    &--6 {
      background-color: brown;
      grid-row: 2/3;
      grid-column: 2/4;   // გაერთიანება უჯრედების მერჯი 
    }
    
    
  }
  
  /////////////////////////////////////////////
  
  .container_name_areas {
    background-color: #eee;
    width: 1000px;
    margin: 30px auto;
  
    display: grid;
    grid-template-rows: repeat(3, 150px);
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 30px;
    
    grid-template-areas: "pirveli pirveli pirveli"
                         "meore meore meore"    /// . წერტილი ცარიელი ითემია
    
  
  }
  
  .item3 {
    padding: 20px;
    font-size: 30px;
    font-family: sans-serif;
    color: white;
    
    &--1 {
     background-color: orange;
     grid-area: pirveli;
    }
    
    &--2 {
      background-color: green;
    }
      
    &--3 {
      background-color: violet;
    }
      
    &--4 {
      background-color: pink;
    }
      
    &--5 {
      background-color: blue;
  
      
    }
      
    &--6 {
      background-color: brown;
    }
    
    
  }


  ////// ამ კონტეინერში 8 ითემია. აქედან 4-ს ზომები გაწერილია (ექსპლისით აითემ), დანარჩენ 4 ზე   grid-auto-rows: იმოქმედებს ავტომატურად (იმპლისით აითემ).
  .container4 {
    background-color: #eee;
    width: 1000px;
    margin: 30px auto;
  
    display: grid;
    grid-template-rows: repeat(2,150px);
    grid-template-columns: repeat(2,1fr);
    grid-gap: 30px;

    grid-auto-rows: 80px;

    // grid-auto-flow: column;  // გრდის ავტომატური მიმართულება დეფაულტია როუ
    // grid-auto-columns: .5fr; დანარჩენი ითემები ავტომატურად 50% ზომის გახდება გაწერილი ელემენტების

    align-items: center;
    //align-items: stretch;  // default   
    justify-items: center;

    .item4 {
        padding: 10px;
        font-size: 30px;
        font-family: sans-serif;
        color: white;
        background-color: orange;

        &--4 {
            background-color: crimson;
            grid-row: 2 /span 3;
            align-self: start;
            justify-self: start;
          }
            
        &--7 {
            background-color: palevioletred;
            grid-column: 1 /-1;                  
        }        

    }
  }



  .container5 {
    background-color: rgb(167, 241, 133);
    width: 1000px;
    height: 1000px;
    margin: 30px auto;
  
    display: grid;

    grid-template-rows: repeat(2, 100px);
    grid-template-columns: repeat(2, 200px);
    grid-gap: 30px;

    justify-content: center;  //space-evenly  start center space-around space-between
    align-content: center;

    grid-auto-flow: row dense;  //  აქ dense ნიშნავს რომ ცარიელი კუბიკები არ დატოვოს ავტომატურმა განაწილებამ

    .item5 {
        padding: 10px;
        font-size: 30px;
        font-family: sans-serif;
        color: white;
        background-color: orange;

        &--4 {
            background-color: crimson;
            grid-row: 2 /span 3;
            align-self: start;
            justify-self: start;
          }

        &--6 {
            background-color: rgb(23, 81, 129);
            grid-row: 2 /span 2;
          }
                        
        &--7 {
            background-color: palevioletred;
            grid-column: 1 /-1;                  
        }   
    }    


  }




  .container6 {
    background-color: rgb(167, 241, 133);
    // width: 1000px;
    height: 1000px;
    margin: 30px auto;

    display: grid;

    // grid-template-rows: repeat(2, 150px);
    grid-template-columns: max-content 1fr 1fr min-content; // max-content ქსიმალური საჭირო ზომაა რაც ტექსტს ჭირდება // min-content
    // grid-template-rows: repeat(2, min-content);
    grid-template-rows: repeat(2, minmax(150px, min-content));  // minmax ზღვრის დაწესება ამაზე ცოტა ან მეტი რომ არ გაიზარდოს
    width: 90%;

    .item6 {
        padding: 10px;
        font-size: 30px;
        font-family: sans-serif;
        color: white;
        background-color: orange;



        &--1 { background-color: crimson;}
        &--2 { background-color: rgb(110, 173, 68);}
        &--3 { background-color: rgb(116, 84, 122);}
        &--4 { background-color: rgb(236, 179, 146);}
        &--5 { background-color: rgb(102, 126, 125);}
        &--6 { background-color: rgb(220, 223, 37);}
        &--7 { background-color: rgb(19, 17, 17);}
        &--8 { background-color: rgb(248, 123, 7);}

    }
 

  } 




// using auto-fill and auto-fit
  .container7 {
    background-color: rgb(167, 241, 133);
    width: 90%;

    margin: 30px auto;

    display: grid;

    grid-template-rows: repeat(2, minmax(150px, min-content));  // minmax ზღვრის დაწესება ამაზე ცოტა ან მეტი რომ არ გაიზარდოს
    //grid-template-columns: repeat(auto-fill,100px); /// როცა კონტეინერის სიგანე 1000 ია auto-fill ავტომატურად ამატებს 10 ცალ 100px ითემს
    // grid-template-columns: repeat(auto-fit,100px);   /// ხოლო  auto-fit ამატებს 8 რამდენი ელემენტიც გვაქ html კოდში გაწერილი. ბოლო ცარიელ ელემენტები 0 ზომამდე დაყავს
    grid-template-columns: repeat(auto-fit,minmax(200px,1fr)); // ამო კომბინაციით მთელ ეკრანზე თანაბრად გავშლით ელემენტებს
    grid-auto-rows: 150px;;
    .item7 {
        padding: 10px;
        font-size: 30px;
        font-family: sans-serif;
        color: white;
        background-color: orange;



        &--1 { background-color: crimson;}
        &--2 { background-color: rgb(110, 173, 68);}
        &--3 { background-color: rgb(116, 84, 122);}
        &--4 { background-color: rgb(236, 179, 146);}
        &--5 { background-color: rgb(102, 126, 125);}
        &--6 { background-color: rgb(220, 223, 37);}
        &--7 { background-color: rgb(19, 17, 17);}
        &--8 { background-color: rgb(248, 123, 7);}

    }
 

  } 





  // METHOD 1: LINE NUMBERS
/*
.challenge {
  width: 1000px;
  margin: 30px auto;
  
  display: grid;
  grid-template-rows: 100px 200px 400px 100px;
  grid-template-columns: repeat(3, 1fr) 200px;
  grid-gap: 30px;
  
  & > * {
    background-color: orangered;
    padding: 20px;
    color: white;
    font-size: 30px;
    font-family: sans-serif;
  }
  
  .header {
    grid-column: 1 / -1;
  }
  
  .sidebar {
    grid-column: 4 / 5;
    grid-row: 2 / span 2;
  }
  
  .main-content {
    grid-column: 1 / span 3;
  }
  
  .footer {
    grid-column: 1 / -1;
  }
}
*/

// METHOD 2: LINE NAMES
/*
.challenge {
  width: 1000px;
  margin: 30px auto;
  
  display: grid;
  grid-template-rows: [header-start] 100px [header-end box-start] 200px [box-end main-start] 400px [main-end footer-start] 100px [footer-end];
  
  grid-template-columns: repeat(3, [col-start] 1fr [col-end]) 200px [grid-end];
  grid-gap: 30px;
  
  & > * {
    background-color: orangered;
    padding: 20px;
    color: white;
    font-size: 30px;
    font-family: sans-serif;
  }
  
  .header {
    grid-column: col-start 1 / grid-end;
  }
  
  .sidebar {
    grid-column: col-end 3 / grid-end;
    grid-row: box-start / main-end;
  }
  
  .main-content {
    grid-column: col-start 1 / col-end 3;
  }
  
  .footer {
    grid-column: col-start 1 / grid-end;
  }
}
*/

// METHOD 3: NAME GRID AREAS
.challenge {
    width: 1000px;
    margin: 30px auto;
    
    display: grid;
    grid-template-rows: 100px 200px 400px 100px;
    grid-template-columns: repeat(3, 1fr) 200px;
    grid-gap: 30px;
    
    grid-template-areas: ". head head ."
                         "box-1 box-2 box-3 side"
                         "main main main side"
                         "foot foot foot foot";
    
    & > * {
      background-color: orangered;
      padding: 20px;
      color: white;
      font-size: 30px;
      font-family: sans-serif;
    }
    
    .header {
      grid-area: head;
    }
    
    .small-box-1 { grid-area: box-1; }
    .small-box-2 { grid-area: box-2; }
    .small-box-3 { grid-area: box-3; }
  
    
    .sidebar {
      grid-area: side;
    }
    
    .main-content {
      grid-area: main;
    }
    
    .footer {
      grid-area: foot;
    }
  }
  